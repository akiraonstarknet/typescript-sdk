{"version":3,"file":"index.mjs","sources":["../../src/rolldown/plugins/indexers.ts","../../src/rolldown/plugins/instrumentation.ts","../../src/rolldown/plugins/static-config.ts","../../src/rolldown/config.ts"],"sourcesContent":["import virtual from \"@rollup/plugin-virtual\";\nimport type { Apibara } from \"apibara/types\";\nimport { hash } from \"ohash\";\nimport type { RolldownPluginOption } from \"rolldown\";\n\nexport function indexers(apibara: Apibara) {\n  const indexers = [...new Set(apibara.indexers)];\n  return virtual({\n    \"#apibara-internal-virtual/indexers\": `\n    ${indexers.map((i) => `import * as _${hash(i)} from '${i.indexer}';`).join(\"\\n\")}\n\n    export const indexers = [\n      ${indexers.map((i) => `{ name: \"${i.name}\", indexer: _${hash(i)} }`).join(\",\\n\")}\n    ];\n    `,\n  }) as RolldownPluginOption;\n}\n","import { existsSync } from \"node:fs\";\nimport { join } from \"node:path\";\nimport virtual from \"@rollup/plugin-virtual\";\nimport type { Apibara } from \"apibara/types\";\nimport type { RolldownPluginOption } from \"rolldown\";\n\nexport function instrumentation(apibara: Apibara) {\n  const instrumentationPath = join(\n    apibara.options._c12.cwd!,\n    `instrumentation.${apibara.options._c12.configFile?.endsWith(\".ts\") ? \"ts\" : apibara.options._c12.configFile?.endsWith(\".mjs\") ? \"mjs\" : \"js\"}`,\n  );\n\n  if (!existsSync(instrumentationPath)) {\n    return virtual({\n      \"#apibara-internal-virtual/instrumentation\": `\n      let register = undefined;\n      let logger = undefined;\n  \n      export { register, logger };\n      `,\n    }) as RolldownPluginOption;\n  }\n\n  /**\n   * We are importing the instrumentation file inline with \"require\" instead of \"import\" at the top of the file to avoid warnings from rolldown\n   * when some methods are not defined in the instrumentation file.\n   *\n   * Example warning:\n   * \n   * [IMPORT_IS_UNDEFINED] Warning: Import `logger` will always be undefined because there is no matching export in 'instrumentation.ts'\n   *     ╭─[virtual:#apibara-internal-virtual/instrumentation:11:35]\n   *     │\n   *  11 │     if (instrumentation && typeof instrumentation.logger === \"function\") {\n   *     │                                   ───────────┬──────────  \n   *     │                                              ╰──────────── \n   * ────╯\n\n  * [IMPORT_IS_UNDEFINED] Warning: Import `logger` will always be undefined because there is no matching export in 'instrumentation.ts'\n  *     ╭─[virtual:#apibara-internal-virtual/instrumentation:12:16]\n  *     │\n  *  12 │       logger = instrumentation.logger;\n  *     │                ───────────┬──────────  \n  *     │                           ╰──────────── \n  * ────╯ \n  */\n  return virtual({\n    \"#apibara-internal-virtual/instrumentation\": `\n    let register = undefined;\n    let logger = undefined;\n\n    try {\n      const instrumentation = require('${instrumentationPath}');\n      \n      if (instrumentation?.register && typeof instrumentation.register === \"function\") {\n        register = instrumentation.register;\n      }\n      \n      if (instrumentation?.logger && typeof instrumentation.logger === \"function\") {\n        logger = instrumentation.logger;\n      }\n    } catch {\n      // Silently handle any require errors\n    }\n\n    export { register, logger };\n    `,\n  }) as RolldownPluginOption;\n}\n","import virtual from \"@rollup/plugin-virtual\";\nimport { USER_ENV_APIBARA_RUNTIME_CONFIG } from \"apibara/common\";\nimport type { Apibara } from \"apibara/types\";\nimport type { RolldownPluginOption } from \"rolldown\";\n\nexport function staticConfig(apibara: Apibara) {\n  const presetString = apibara.options.preset ?? \"\";\n  const presetsStringified = JSON.stringify(apibara.options.presets ?? {});\n  const runtimeConfigStringified = JSON.stringify(\n    apibara.options.runtimeConfig ?? {},\n  );\n\n  return virtual({\n    \"#apibara-internal-virtual/static-config\": `\n    export const preset = ${presetString ? `\"${presetString}\"` : \"undefined\"};\n    export const presets = ${presetsStringified};\n    export const runtimeConfig = ${runtimeConfigStringified};\n    export const userEnvRuntimeConfig = JSON.parse(process.env.${USER_ENV_APIBARA_RUNTIME_CONFIG} ?? \"{}\");\n    `,\n  }) as RolldownPluginOption;\n}\n","import { existsSync } from \"node:fs\";\nimport { builtinModules } from \"node:module\";\nimport type { Apibara } from \"apibara/types\";\nimport defu from \"defu\";\nimport { join } from \"pathe\";\nimport type {\n  ConfigExport,\n  RolldownOptions,\n  RolldownPluginOption,\n} from \"rolldown\";\nimport { indexers } from \"./plugins/indexers\";\nimport { instrumentation } from \"./plugins/instrumentation\";\nimport { staticConfig } from \"./plugins/static-config\";\n\nconst runtimeDependencies = [\n  \"better-sqlite3\",\n  \"@electric-sql/pglite\",\n  \"pg\",\n  // https://socket.io/docs/v4/server-installation/#additional-packages\n  \"utf-8-validate\",\n  \"bufferutil\",\n  // was giving unresolved import warnings from `node-fetch` library.\n  \"encoding\",\n];\n\nexport function getRolldownConfig(apibara: Apibara): RolldownOptions {\n  const extensions: string[] = [\n    \".ts\",\n    \".mjs\",\n    \".js\",\n    \".json\",\n    \".node\",\n    \".tsx\",\n    \".jsx\",\n  ];\n\n  const tsConfigExists = existsSync(\n    join(apibara.options.rootDir, \"tsconfig.json\"),\n  );\n\n  const rolldownConfig: RolldownOptions & {\n    plugins: RolldownPluginOption[];\n  } = defu(\n    // biome-ignore lint/suspicious/noExplicitAny: apibara.options.rolldownConfig is typed\n    apibara.options.rolldownConfig as any,\n    <ConfigExport>{\n      platform: \"node\",\n      input: apibara.options.entry,\n      output: {\n        dir: join(apibara.options.outputDir || \"./.apibara/build\"),\n        format: \"esm\",\n        entryFileNames: \"[name].mjs\",\n        chunkFileNames: \"chunks/[name]-[hash].mjs\",\n        sourcemap: true,\n      },\n      plugins: [],\n      onwarn(warning, rolldownWarn) {\n        if (\n          ![\"CIRCULAR_DEPENDENCY\", \"EVAL\", \"THIS_IS_UNDEFINED\"].includes(\n            warning.code || \"\",\n          ) &&\n          !warning.message.includes(\"Unsupported source map comment\") &&\n          !warning.message.includes(\"@__PURE__\") &&\n          !warning.message.includes(\"/*#__PURE__*/\")\n        ) {\n          rolldownWarn(warning);\n        }\n      },\n      resolve: {\n        extensions,\n        preferBuiltins: !!apibara.options.node,\n        mainFields: [\"main\"],\n        exportConditions: apibara.options.exportConditions,\n        tsconfigFilename: tsConfigExists ? \"tsconfig.json\" : undefined,\n      },\n      treeshake: true,\n      external: [...builtinModules, ...runtimeDependencies],\n    },\n  );\n\n  rolldownConfig.plugins?.push(staticConfig(apibara));\n  rolldownConfig.plugins?.push(instrumentation(apibara));\n  rolldownConfig.plugins?.push(indexers(apibara));\n  return rolldownConfig;\n}\n"],"names":["indexers","join"],"mappings":"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"}